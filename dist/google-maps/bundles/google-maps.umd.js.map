{"version":3,"file":"google-maps.umd.js.map","sources":["ng://google-maps/lib/google-maps.service.ts","ng://google-maps/lib/google-maps.component.ts","ng://google-maps/lib/web/google-map-web.ts","ng://google-maps/lib/google-maps.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GoogleMapsService {\n\n  constructor() { }\n}\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'fiv-google-maps',\n  template: `\n    <p>\n      google-maps works!\n    </p>\n  `,\n  styles: []\n})\nexport class GoogleMapsComponent implements OnInit {\n\n  @Input() isCordova: boolean;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit, ElementRef, Renderer2, Inject, Input } from '@angular/core';\nimport { DOCUMENT } from '@angular/platform-browser';\nimport {} from '@types/googlemaps';\n\n@Component({\n    selector: 'fiv-google-map-web',\n    template: ``,\n    styles: [`:host{display:block;width:100%;height:100%}`],\n})\nexport class GoogleMapWebComponent implements OnInit {\n\n    @Input('apiKey') apiKey: string;\n    @Input() zoom: number = 15;\n    @Input() mapOptions: google.maps.MapOptions; // TODO enable mapoptions\n\n    public lat: number = 50.9576191;\n    public lng: number = 6.8272408;\n    public map: any;\n    public markers: any[] = [];\n    private mapsLoaded: boolean = false;\n    private networkHandler = null;\n\n    constructor(private renderer: Renderer2,\n        private element: ElementRef,\n        @Inject(DOCUMENT) private _document) {\n\n    }\n\n    ngOnInit() {\n\n        this.init().then((res) => {\n            console.log(\"Google Maps ready.\")\n        }, (err) => {\n            console.log(err);\n        });\n\n    }\n\n    private init(): Promise<any> {\n\n        return new Promise((resolve, reject) => {\n\n            this.loadSDK().then((res) => {\n\n                this.initMap().then((res) => {\n                    resolve(true);\n                }, (err) => {\n                    reject(err);\n                });\n\n            }, (err) => {\n\n                reject(err);\n\n            });\n\n        });\n\n    }\n\n    private loadSDK(): Promise<any> {\n\n        console.log(\"Loading Google Maps SDK\");\n\n        return new Promise((resolve, reject) => {\n\n            if (!this.mapsLoaded) {\n                this.injectSDK().then((res) => {\n                    resolve(true);\n                }, (err) => {\n                    reject(err);\n                });\n            } else {\n                reject('SDK already loaded');\n            }\n\n        });\n\n\n    }\n\n    private injectSDK(): Promise<any> {\n\n        return new Promise((resolve, reject) => {\n\n            window['mapInit'] = () => {\n                this.mapsLoaded = true;\n                resolve(true);\n            }\n\n            let script = this.renderer.createElement('script');\n            script.id = 'googleMaps';\n\n            if (this.apiKey) {\n                script.src = 'https://maps.googleapis.com/maps/api/js?key=' + this.apiKey + '&callback=mapInit';\n            } else {\n                reject('')\n            }\n\n            this.renderer.appendChild(this._document.body, script);\n\n        });\n\n    }\n\n    private initMap(): Promise<any> {\n\n        return new Promise((resolve) => {\n\n            let latLng = new google.maps.LatLng(this.lat, this.lng);\n            let mapOptions = {\n                center: latLng,\n                zoom: this.zoom\n            };\n\n            this.map = new google.maps.Map(this.element.nativeElement, mapOptions);\n            resolve(true);\n        });\n    }\n\n    public addMarker(lat: number, lng: number): void {\n\n        let latLng = new google.maps.LatLng(lat, lng);\n\n        let marker = new google.maps.Marker({\n            map: this.map,\n            animation: google.maps.Animation.DROP,\n            position: latLng\n        });\n\n        this.markers.push(marker);\n\n    }\n\n}","import { GoogleMapWebComponent } from './web/google-map-web';\nimport { NgModule } from '@angular/core';\nimport { GoogleMapsComponent } from './google-maps.component';\n\n@NgModule({\n  imports: [\n  ],\n  declarations: [GoogleMapsComponent, GoogleMapWebComponent],\n  exports: [GoogleMapsComponent, GoogleMapWebComponent]\n})\nexport class GoogleMapsModule { }\n"],"names":["Injectable","Component","Input","Renderer2","ElementRef","Inject","DOCUMENT","NgModule"],"mappings":";;;;;;;;;;AAAA;QAOE;SAAiB;;oBALlBA,aAAU,SAAC;wBACV,UAAU,EAAE,MAAM;qBACnB;;;;;gCAJD;;;;;;;ACAA;QAeE;SAAiB;;;;QAEjB,sCAAQ;;;YAAR;aACC;;oBAhBFC,YAAS,SAAC;wBACT,QAAQ,EAAE,iBAAiB;wBAC3B,QAAQ,EAAE,mDAIT;wBACD,MAAM,EAAE,EAAE;qBACX;;;;;gCAGEC,QAAK;;kCAbR;;;;;;;ACAA;QAsBI,+BAAoB,QAAmB,EAC3B,SACkB,SAAS;YAFnB,aAAQ,GAAR,QAAQ,CAAW;YAC3B,YAAO,GAAP,OAAO;YACW,cAAS,GAAT,SAAS,CAAA;wBAZf,EAAE;uBAGL,UAAU;uBACV,SAAS;2BAEN,EAAE;8BACI,KAAK;kCACV,IAAI;SAM5B;;;;QAED,wCAAQ;;;YAAR;gBAEI,IAAI,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,UAAC,GAAG;oBACjB,OAAO,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAA;iBACpC,EAAE,UAAC,GAAG;oBACH,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;iBACpB,CAAC,CAAC;aAEN;;;;QAEO,oCAAI;;;;;gBAER,OAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;oBAE/B,KAAI,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,UAAC,GAAG;wBAEpB,KAAI,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,UAAC,GAAG;4BACpB,OAAO,CAAC,IAAI,CAAC,CAAC;yBACjB,EAAE,UAAC,GAAG;4BACH,MAAM,CAAC,GAAG,CAAC,CAAC;yBACf,CAAC,CAAC;qBAEN,EAAE,UAAC,GAAG;wBAEH,MAAM,CAAC,GAAG,CAAC,CAAC;qBAEf,CAAC,CAAC;iBAEN,CAAC,CAAC;;;;;QAIC,uCAAO;;;;;gBAEX,OAAO,CAAC,GAAG,CAAC,yBAAyB,CAAC,CAAC;gBAEvC,OAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;oBAE/B,IAAI,CAAC,KAAI,CAAC,UAAU,EAAE;wBAClB,KAAI,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,UAAC,GAAG;4BACtB,OAAO,CAAC,IAAI,CAAC,CAAC;yBACjB,EAAE,UAAC,GAAG;4BACH,MAAM,CAAC,GAAG,CAAC,CAAC;yBACf,CAAC,CAAC;qBACN;yBAAM;wBACH,MAAM,CAAC,oBAAoB,CAAC,CAAC;qBAChC;iBAEJ,CAAC,CAAC;;;;;QAKC,yCAAS;;;;;gBAEb,OAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;oBAE/B,MAAM,CAAC,SAAS,CAAC,GAAG;wBAChB,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC;wBACvB,OAAO,CAAC,IAAI,CAAC,CAAC;qBACjB,CAAA;;oBAED,IAAI,MAAM,GAAG,KAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;oBACnD,MAAM,CAAC,EAAE,GAAG,YAAY,CAAC;oBAEzB,IAAI,KAAI,CAAC,MAAM,EAAE;wBACb,MAAM,CAAC,GAAG,GAAG,8CAA8C,GAAG,KAAI,CAAC,MAAM,GAAG,mBAAmB,CAAC;qBACnG;yBAAM;wBACH,MAAM,CAAC,EAAE,CAAC,CAAA;qBACb;oBAED,KAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,KAAI,CAAC,SAAS,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;iBAE1D,CAAC,CAAC;;;;;QAIC,uCAAO;;;;;gBAEX,OAAO,IAAI,OAAO,CAAC,UAAC,OAAO;;oBAEvB,IAAI,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,KAAI,CAAC,GAAG,EAAE,KAAI,CAAC,GAAG,CAAC,CAAC;;oBACxD,IAAI,UAAU,GAAG;wBACb,MAAM,EAAE,MAAM;wBACd,IAAI,EAAE,KAAI,CAAC,IAAI;qBAClB,CAAC;oBAEF,KAAI,CAAC,GAAG,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,KAAI,CAAC,OAAO,CAAC,aAAa,EAAE,UAAU,CAAC,CAAC;oBACvE,OAAO,CAAC,IAAI,CAAC,CAAC;iBACjB,CAAC,CAAC;;;;;;;QAGA,yCAAS;;;;;sBAAC,GAAW,EAAE,GAAW;;gBAErC,IAAI,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;;gBAE9C,IAAI,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;oBAChC,GAAG,EAAE,IAAI,CAAC,GAAG;oBACb,SAAS,EAAE,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI;oBACrC,QAAQ,EAAE,MAAM;iBACnB,CAAC,CAAC;gBAEH,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;;;oBA9HjCD,YAAS,SAAC;wBACP,QAAQ,EAAE,oBAAoB;wBAC9B,QAAQ,EAAE,EAAE;wBACZ,MAAM,EAAE,CAAC,6CAA6C,CAAC;qBAC1D;;;;;wBARuCE,YAAS;wBAArBC,aAAU;wDAwB7BC,SAAM,SAACC,wBAAQ;;;;6BAbnBJ,QAAK,SAAC,QAAQ;2BACdA,QAAK;iCACLA,QAAK;;oCAbV;;;;;;;ACAA;;;;oBAICK,WAAQ,SAAC;wBACR,OAAO,EAAE,EACR;wBACD,YAAY,EAAE,CAAC,mBAAmB,EAAE,qBAAqB,CAAC;wBAC1D,OAAO,EAAE,CAAC,mBAAmB,EAAE,qBAAqB,CAAC;qBACtD;;+BATD;;;;;;;;;;;;;;;;;;;;;;;;;;"}
