{"version":3,"sources":["ng://google-maps/lib/google-maps.service.ts","ng://google-maps/lib/google-maps.component.ts","ng://google-maps/lib/web/google-map-web.ts","ng://google-maps/lib/google-maps.module.ts"],"names":["GoogleMapsService","Injectable","args","providedIn","GoogleMapsComponent","prototype","ngOnInit","Component","selector","template","styles","Input","GoogleMapWebComponent","renderer","element","_document","this","init","then","res","console","log","err","Promise","resolve","reject","_this","loadSDK","initMap","mapsLoaded","injectSDK","window","script","createElement","id","apiKey","src","appendChild","body","mapOptions","center","google","maps","LatLng","lat","lng","zoom","map","Map","nativeElement","addMarker","latLng","marker","Marker","animation","Animation","DROP","position","markers","push","Renderer2","ElementRef","Inject","DOCUMENT","GoogleMapsModule","NgModule","imports","declarations","exports"],"mappings":"4VAAA,IAAAA,EAAA,WAOE,SAAAA,gCALDC,EAAAA,WAAUC,KAAA,CAAC,CACVC,WAAY,sJAHd,GCAAC,EAAA,WAeE,SAAAA,YAEAA,EAAAC,UAAAC,SAAA,iCAfDC,EAAAA,UAASL,KAAA,CAAC,CACTM,SAAU,kBACVC,SAAU,oDAKVC,OAAQ,gFAIPC,EAAAA,WAbH,GCAAC,EAAA,WAsBI,SAAAA,EAAoBC,EACRC,EACkBC,GAFVC,KAAAH,SAAAA,EACRG,KAAAF,QAAAA,EACkBE,KAAAD,UAAAA,YAZN,YAGH,oBACA,uBAEG,oBACM,sBACL,YAQzBH,EAAAP,UAAAC,SAAA,WAEIU,KAAKC,OAAOC,KAAK,SAACC,GACdC,QAAQC,IAAI,uBACb,SAACC,GACAF,QAAQC,IAAIC,MAKZV,EAAAP,UAAAY,2BAEJ,OAAO,IAAIM,QAAQ,SAACC,EAASC,GAEzBC,EAAKC,UAAUT,KAAK,SAACC,GAEjBO,EAAKE,UAAUV,KAAK,SAACC,GACjBK,GAAQ,IACT,SAACF,GACAG,EAAOH,MAGZ,SAACA,GAEAG,EAAOH,QAQXV,EAAAP,UAAAsB,8BAIJ,OAFAP,QAAQC,IAAI,2BAEL,IAAIE,QAAQ,SAACC,EAASC,GAEpBC,EAAKG,WAONJ,EAAO,sBANPC,EAAKI,YAAYZ,KAAK,SAACC,GACnBK,GAAQ,IACT,SAACF,GACAG,EAAOH,QAWfV,EAAAP,UAAAyB,gCAEJ,OAAO,IAAIP,QAAQ,SAACC,EAASC,GAEzBM,OAAgB,QAAI,WAChBL,EAAKG,YAAa,EAClBL,GAAQ,IAGZ,IAAIQ,EAASN,EAAKb,SAASoB,cAAc,UACzCD,EAAOE,GAAK,aAERR,EAAKS,OACLH,EAAOI,IAAM,+CAAiDV,EAAKS,OAAS,oBAE5EV,EAAO,IAGXC,EAAKb,SAASwB,YAAYX,EAAKX,UAAUuB,KAAMN,MAM/CpB,EAAAP,UAAAuB,8BAEJ,OAAO,IAAIL,QAAQ,SAACC,GAEhB,IACIe,EAAa,CACbC,OAFS,IAAIC,OAAOC,KAAKC,OAAOjB,EAAKkB,IAAKlB,EAAKmB,KAG/CC,KAAMpB,EAAKoB,MAGfpB,EAAKqB,IAAM,IAAIN,OAAOC,KAAKM,IAAItB,EAAKZ,QAAQmC,cAAeV,GAC3Df,GAAQ,MAITZ,EAAAP,UAAA6C,mBAAUN,EAAaC,GAE1B,IAAIM,EAAS,IAAIV,OAAOC,KAAKC,OAAOC,EAAKC,GAErCO,EAAS,IAAIX,OAAOC,KAAKW,OAAO,CAChCN,IAAK/B,KAAK+B,IACVO,UAAWb,OAAOC,KAAKa,UAAUC,KACjCC,SAAUN,IAGdnC,KAAK0C,QAAQC,KAAKP,wBA9HzB7C,EAAAA,UAASL,KAAA,CAAC,CACPM,SAAU,qBACVC,SAAU,GACVC,OAAQ,CAAC,4FAP2BkD,EAAAA,iBAAZC,EAAAA,8CAwBnBC,EAAAA,OAAM5D,KAAA,CAAC6D,EAAAA,+CAbXpD,EAAAA,MAAKT,KAAA,CAAC,wBACNS,EAAAA,0BACAA,EAAAA,WAbL,GCAAqD,EAAA,oDAICC,EAAAA,SAAQ/D,KAAA,CAAC,CACRgE,QAAS,GAETC,aAAc,CAAC/D,EAAqBQ,GACpCwD,QAAS,CAAChE,EAAqBQ,SARjC","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GoogleMapsService {\n\n  constructor() { }\n}\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'fiv-google-maps',\n  template: `\n    <p>\n      google-maps works!\n    </p>\n  `,\n  styles: []\n})\nexport class GoogleMapsComponent implements OnInit {\n\n  @Input() isCordova: boolean;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit, ElementRef, Renderer2, Inject, Input } from '@angular/core';\nimport { DOCUMENT } from '@angular/platform-browser';\nimport {} from '@types/googlemaps';\n\n@Component({\n    selector: 'fiv-google-map-web',\n    template: ``,\n    styles: [`:host{display:block;width:100%;height:100%}`],\n})\nexport class GoogleMapWebComponent implements OnInit {\n\n    @Input('apiKey') apiKey: string;\n    @Input() zoom: number = 15;\n    @Input() mapOptions: google.maps.MapOptions; // TODO enable mapoptions\n\n    public lat: number = 50.9576191;\n    public lng: number = 6.8272408;\n    public map: any;\n    public markers: any[] = [];\n    private mapsLoaded: boolean = false;\n    private networkHandler = null;\n\n    constructor(private renderer: Renderer2,\n        private element: ElementRef,\n        @Inject(DOCUMENT) private _document) {\n\n    }\n\n    ngOnInit() {\n\n        this.init().then((res) => {\n            console.log(\"Google Maps ready.\")\n        }, (err) => {\n            console.log(err);\n        });\n\n    }\n\n    private init(): Promise<any> {\n\n        return new Promise((resolve, reject) => {\n\n            this.loadSDK().then((res) => {\n\n                this.initMap().then((res) => {\n                    resolve(true);\n                }, (err) => {\n                    reject(err);\n                });\n\n            }, (err) => {\n\n                reject(err);\n\n            });\n\n        });\n\n    }\n\n    private loadSDK(): Promise<any> {\n\n        console.log(\"Loading Google Maps SDK\");\n\n        return new Promise((resolve, reject) => {\n\n            if (!this.mapsLoaded) {\n                this.injectSDK().then((res) => {\n                    resolve(true);\n                }, (err) => {\n                    reject(err);\n                });\n            } else {\n                reject('SDK already loaded');\n            }\n\n        });\n\n\n    }\n\n    private injectSDK(): Promise<any> {\n\n        return new Promise((resolve, reject) => {\n\n            window['mapInit'] = () => {\n                this.mapsLoaded = true;\n                resolve(true);\n            }\n\n            let script = this.renderer.createElement('script');\n            script.id = 'googleMaps';\n\n            if (this.apiKey) {\n                script.src = 'https://maps.googleapis.com/maps/api/js?key=' + this.apiKey + '&callback=mapInit';\n            } else {\n                reject('')\n            }\n\n            this.renderer.appendChild(this._document.body, script);\n\n        });\n\n    }\n\n    private initMap(): Promise<any> {\n\n        return new Promise((resolve) => {\n\n            let latLng = new google.maps.LatLng(this.lat, this.lng);\n            let mapOptions = {\n                center: latLng,\n                zoom: this.zoom\n            };\n\n            this.map = new google.maps.Map(this.element.nativeElement, mapOptions);\n            resolve(true);\n        });\n    }\n\n    public addMarker(lat: number, lng: number): void {\n\n        let latLng = new google.maps.LatLng(lat, lng);\n\n        let marker = new google.maps.Marker({\n            map: this.map,\n            animation: google.maps.Animation.DROP,\n            position: latLng\n        });\n\n        this.markers.push(marker);\n\n    }\n\n}","import { GoogleMapWebComponent } from './web/google-map-web';\nimport { NgModule } from '@angular/core';\nimport { GoogleMapsComponent } from './google-maps.component';\n\n@NgModule({\n  imports: [\n  ],\n  declarations: [GoogleMapsComponent, GoogleMapWebComponent],\n  exports: [GoogleMapsComponent, GoogleMapWebComponent]\n})\nexport class GoogleMapsModule { }\n"]}